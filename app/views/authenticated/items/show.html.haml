#auth-info
  You are logged in as
  %b 
    %u
      = current_user.name
#item-name
  = best_in_place_if @item.user == current_user, @item, :name

#request-info
  %strong
    = @item.user.name
  requested this item
  = time_ago_in_words(@item.created_at) 
  ago
  %br
  Amount: 
  = best_in_place_if @item.user == current_user, @item, :amount
  %br
  - unless @item.URL.blank?
    Link: 
    =link_to @item.URL, @item.URL, target: "_blank"
  %br
%hr
- if @comments.count == 1
  There is 1 comment to this item
- elsif @comments.count > 0
  There are #{@comments.count} comments on this item
- else
  There are no comments yet. 
%hr
  - @comments.each do |comment|
    -if comment.is_root?
      = comment.user.name
      wrote:
      %br
        = best_in_place_if comment.user == current_user, comment, :content, type: :textarea
      .comment-options
        - if comment.user_id == current_user.id #only author can edit and delete comment
          - if comment.children.count == 0 #can delete coment, if noone replied
            = link_to item_comment_path(@item, comment), id: "destroy-comment-#{comment.id}", method: 'delete' do
              %i.icon-trash
        - else
          = comment.upvotes.size
          = link_to like_item_comment_path(@item, comment), method: :get do
            %i.icon-thumbs-up
          = link_to dislike_item_comment_path(@item, comment), method: :get do
            %i.icon-thumbs-down
          = 0 - comment.downvotes.size
      
        = link_to nil, class: 'new-comment-container'  do
          = icon_label 'icon-reply'
        .comment-reply
          = simple_form_for [@item, @comment],  html: { class: 'form-horizontal' } do |form|
            = form.text_area :content, remote: true
            = form.hidden_field :parent_id, remote: true, value: comment.id
            = form.submit t('common.submit'), class: 'btn btn-success', remote: true, data: { disable_with: t('common.please_wait') }
   
        -comment.children.each do |nested_comment| #display all comment's children
          %p
          = nested_comment.user.name
          wrote:
          %br
          = best_in_place_if nested_comment.user == current_user, nested_comment, :content, type: :textarea
          .comment-options
            - if nested_comment.user_id == current_user.id
              - if comment.children.count == 0 #can delete coment, if noone replied
                = link_to item_comment_path(@item, nested_comment), id: "destroy-comment-#{comment.id}", method: 'delete' do
                  %i.icon-trash
              = link_to item_comment_path(@item, nested_comment), id: "destroy-comment-#{comment.id}", method: 'delete' do
                %i.icon-trash
            - else
              = nested_comment.upvotes.size
              = link_to like_item_comment_path(@item, nested_comment), method: :get do
                %i.icon-thumbs-up
              = link_to dislike_item_comment_path(@item, nested_comment), method: :get do
                %i.icon-thumbs-down
              = 0 - nested_comment.downvotes.size

            = link_to nil, class: 'new-comment-container'  do
              = icon_label 'icon-reply'
            .comment-reply
              = simple_form_for [@item, @comment],  html: { class: 'form-horizontal' } do |form|
                = form.text_area :content, remote: true
                = form.hidden_field :parent_id, remote: true, value: comment.id
                %br
                = form.submit t('common.submit'), class: 'btn btn-success', remote: true, data: { disable_with: t('common.please_wait') }
  
%hr
= render :partial => '/authenticated/comments/new'

.center
  %hr
  = link_to 'Back to the list of items', {:action => 'index'}, class: 'important'
  %hr


